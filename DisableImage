import java.util.HashMap;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.testng.annotations.Test;

public class DisableImage {
	
	@Test
	public static void desableImage()
	{
		/*System.setProperty("webdriver.chrome.driver", "C:\\Users\\abhishek.naik\\Documents\\software\\chromedriver_win32-75(1)\\chromedriver.exe");
		ChromeOptions options=new ChromeOptions();
		disableImageChrome(options);
	
		WebDriver driver=new ChromeDriver(options);
		*/
		System.setProperty("webdriver.gecko.driver", "C:\\Users\\abhishek.naik\\Downloads\\Selenium Training\\geckodriver-v0.23.0-win64\\geckodriver.exe");
		FirefoxOptions options=new FirefoxOptions();
		disablrImageFireFox(options);
		WebDriver driver=new FirefoxDriver(options);
		driver.get("https://www.amazon.in");
	} 
	
	public static void disableImageChrome(ChromeOptions options)
	{
		HashMap<String, Object> images=new HashMap<String, Object>();
		images.put("images", 2);
		HashMap<String, Object> pref=new HashMap<String, Object>();
		pref.put("profile.default_content_setting_values", images);
		options.setExperimentalOption("prefs", pref);
	}
	
	public static void disablrImageFireFox(FirefoxOptions options)
	{
		FirefoxProfile profile=new FirefoxProfile();
		profile.setPreference("permissions.default.image", 2);
		options.setProfile(profile);
		options.setCapability(FirefoxDriver.PROFILE, profile);
		
	}

}
